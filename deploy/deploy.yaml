- hosts: wee
  user: root
  become: true
  vars:
    api_user: api
    api_source: "/home/{{api_user}}/app"
    api_service: wee-media-receiver

  tasks:
    - user:
        name: "{{ api_user }}"
        state: present

    - name: Create app directory
      file:
        path: "{{api_source}}"
        state: directory
        owner: "{{api_user}}"

    - name: Synchronize source files
      synchronize:
        src: ../src
        dest: "{{api_source}}"
        delete: yes
        recursive: yes

    - name: Synchronize nginx files
      synchronize:
        src: ./nginx/
        dest: /etc/nginx
        delete: yes
        recursive: yes
      notify:
        - Restart nginx

    - name: Copy root source files
      copy: src=../{{ item.src }} dest={{api_source}}/{{ item.src }}
      with_items:
        - { src: "main.py" }
        - { src: "requirements.txt" }
        - { src: ".env" }
        - { src: "Dockerfile" }
        - { src: "docker-compose.yaml" }

    - name: Tear down existing services
      docker_compose:
        project_src: "{{ api_source }}"
        state: absent

    - name: Create and start services
      docker_compose:
        project_src: "{{ api_source }}"
      register: output

    - debug:
        var: output

    - name: Run `docker-compose up` again
      docker_compose:
        project_src: "{{ api_source }}"
        build: no
      register: output

    - debug:
        var: output

    - name: PIP Environment
      pip:
        requirements: "{{api_source}}/requirements.txt"
        virtualenv: "{{api_source}}/venv"

    - name: Check if service is up
      uri:
        url: "http://{{ ansible_default_ipv4.address }}"
        return_content: yes
      register: this
      failed_when: "'Wee Media Receiver' not in this.content"


  handlers:
    - name: Restart nginx
      service:
        name: nginx
        state: restarted
